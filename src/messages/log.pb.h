// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: log.proto

#ifndef PROTOBUF_log_2eproto__INCLUDED
#define PROTOBUF_log_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace mesos {
namespace internal {
namespace log {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_log_2eproto();
void protobuf_AssignDesc_log_2eproto();
void protobuf_ShutdownFile_log_2eproto();

class Promise;
class Action;
class Action_Nop;
class Action_Append;
class Action_Truncate;
class Record;
class PromiseRequest;
class PromiseResponse;
class WriteRequest;
class WriteResponse;
class LearnRequest;
class LearnResponse;
class LearnedMessage;

enum Action_Type {
  Action_Type_NOP = 1,
  Action_Type_APPEND = 2,
  Action_Type_TRUNCATE = 3
};
bool Action_Type_IsValid(int value);
const Action_Type Action_Type_Type_MIN = Action_Type_NOP;
const Action_Type Action_Type_Type_MAX = Action_Type_TRUNCATE;
const int Action_Type_Type_ARRAYSIZE = Action_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Action_Type_descriptor();
inline const ::std::string& Action_Type_Name(Action_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Action_Type_descriptor(), value);
}
inline bool Action_Type_Parse(
    const ::std::string& name, Action_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Action_Type>(
    Action_Type_descriptor(), name, value);
}
enum Record_Type {
  Record_Type_PROMISE = 1,
  Record_Type_ACTION = 2
};
bool Record_Type_IsValid(int value);
const Record_Type Record_Type_Type_MIN = Record_Type_PROMISE;
const Record_Type Record_Type_Type_MAX = Record_Type_ACTION;
const int Record_Type_Type_ARRAYSIZE = Record_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Record_Type_descriptor();
inline const ::std::string& Record_Type_Name(Record_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Record_Type_descriptor(), value);
}
inline bool Record_Type_Parse(
    const ::std::string& name, Record_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Record_Type>(
    Record_Type_descriptor(), name, value);
}
// ===================================================================

class Promise : public ::google::protobuf::Message {
 public:
  Promise();
  virtual ~Promise();
  
  Promise(const Promise& from);
  
  inline Promise& operator=(const Promise& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Promise& default_instance();
  
  void Swap(Promise* other);
  
  // implements Message ----------------------------------------------
  
  Promise* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Promise& from);
  void MergeFrom(const Promise& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:mesos.internal.log.Promise)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 id_;
  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Promise* default_instance_;
};
// -------------------------------------------------------------------

class Action_Nop : public ::google::protobuf::Message {
 public:
  Action_Nop();
  virtual ~Action_Nop();
  
  Action_Nop(const Action_Nop& from);
  
  inline Action_Nop& operator=(const Action_Nop& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Action_Nop& default_instance();
  
  void Swap(Action_Nop* other);
  
  // implements Message ----------------------------------------------
  
  Action_Nop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Action_Nop& from);
  void MergeFrom(const Action_Nop& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:mesos.internal.log.Action.Nop)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Action_Nop* default_instance_;
};
// -------------------------------------------------------------------

class Action_Append : public ::google::protobuf::Message {
 public:
  Action_Append();
  virtual ~Action_Append();
  
  Action_Append(const Action_Append& from);
  
  inline Action_Append& operator=(const Action_Append& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Action_Append& default_instance();
  
  void Swap(Action_Append* other);
  
  // implements Message ----------------------------------------------
  
  Action_Append* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Action_Append& from);
  void MergeFrom(const Action_Append& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bytes bytes = 1;
  inline bool has_bytes() const;
  inline void clear_bytes();
  static const int kBytesFieldNumber = 1;
  inline const ::std::string& bytes() const;
  inline void set_bytes(const ::std::string& value);
  inline void set_bytes(const char* value);
  inline void set_bytes(const void* value, size_t size);
  inline ::std::string* mutable_bytes();
  
  // optional bytes cksum = 2;
  inline bool has_cksum() const;
  inline void clear_cksum();
  static const int kCksumFieldNumber = 2;
  inline const ::std::string& cksum() const;
  inline void set_cksum(const ::std::string& value);
  inline void set_cksum(const char* value);
  inline void set_cksum(const void* value, size_t size);
  inline ::std::string* mutable_cksum();
  
  // @@protoc_insertion_point(class_scope:mesos.internal.log.Action.Append)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* bytes_;
  static const ::std::string _default_bytes_;
  ::std::string* cksum_;
  static const ::std::string _default_cksum_;
  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Action_Append* default_instance_;
};
// -------------------------------------------------------------------

class Action_Truncate : public ::google::protobuf::Message {
 public:
  Action_Truncate();
  virtual ~Action_Truncate();
  
  Action_Truncate(const Action_Truncate& from);
  
  inline Action_Truncate& operator=(const Action_Truncate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Action_Truncate& default_instance();
  
  void Swap(Action_Truncate* other);
  
  // implements Message ----------------------------------------------
  
  Action_Truncate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Action_Truncate& from);
  void MergeFrom(const Action_Truncate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 to = 1;
  inline bool has_to() const;
  inline void clear_to();
  static const int kToFieldNumber = 1;
  inline ::google::protobuf::uint64 to() const;
  inline void set_to(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:mesos.internal.log.Action.Truncate)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 to_;
  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Action_Truncate* default_instance_;
};
// -------------------------------------------------------------------

class Action : public ::google::protobuf::Message {
 public:
  Action();
  virtual ~Action();
  
  Action(const Action& from);
  
  inline Action& operator=(const Action& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Action& default_instance();
  
  void Swap(Action* other);
  
  // implements Message ----------------------------------------------
  
  Action* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Action& from);
  void MergeFrom(const Action& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef Action_Nop Nop;
  typedef Action_Append Append;
  typedef Action_Truncate Truncate;
  
  typedef Action_Type Type;
  static const Type NOP = Action_Type_NOP;
  static const Type APPEND = Action_Type_APPEND;
  static const Type TRUNCATE = Action_Type_TRUNCATE;
  static inline bool Type_IsValid(int value) {
    return Action_Type_IsValid(value);
  }
  static const Type Type_MIN =
    Action_Type_Type_MIN;
  static const Type Type_MAX =
    Action_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    Action_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return Action_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return Action_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return Action_Type_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required uint64 position = 1;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 1;
  inline ::google::protobuf::uint64 position() const;
  inline void set_position(::google::protobuf::uint64 value);
  
  // required uint64 promised = 2;
  inline bool has_promised() const;
  inline void clear_promised();
  static const int kPromisedFieldNumber = 2;
  inline ::google::protobuf::uint64 promised() const;
  inline void set_promised(::google::protobuf::uint64 value);
  
  // optional uint64 performed = 3;
  inline bool has_performed() const;
  inline void clear_performed();
  static const int kPerformedFieldNumber = 3;
  inline ::google::protobuf::uint64 performed() const;
  inline void set_performed(::google::protobuf::uint64 value);
  
  // optional bool learned = 4;
  inline bool has_learned() const;
  inline void clear_learned();
  static const int kLearnedFieldNumber = 4;
  inline bool learned() const;
  inline void set_learned(bool value);
  
  // optional .mesos.internal.log.Action.Type type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::mesos::internal::log::Action_Type type() const;
  inline void set_type(::mesos::internal::log::Action_Type value);
  
  // optional .mesos.internal.log.Action.Nop nop = 6;
  inline bool has_nop() const;
  inline void clear_nop();
  static const int kNopFieldNumber = 6;
  inline const ::mesos::internal::log::Action_Nop& nop() const;
  inline ::mesos::internal::log::Action_Nop* mutable_nop();
  
  // optional .mesos.internal.log.Action.Append append = 7;
  inline bool has_append() const;
  inline void clear_append();
  static const int kAppendFieldNumber = 7;
  inline const ::mesos::internal::log::Action_Append& append() const;
  inline ::mesos::internal::log::Action_Append* mutable_append();
  
  // optional .mesos.internal.log.Action.Truncate truncate = 8;
  inline bool has_truncate() const;
  inline void clear_truncate();
  static const int kTruncateFieldNumber = 8;
  inline const ::mesos::internal::log::Action_Truncate& truncate() const;
  inline ::mesos::internal::log::Action_Truncate* mutable_truncate();
  
  // @@protoc_insertion_point(class_scope:mesos.internal.log.Action)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 position_;
  ::google::protobuf::uint64 promised_;
  ::google::protobuf::uint64 performed_;
  bool learned_;
  int type_;
  ::mesos::internal::log::Action_Nop* nop_;
  ::mesos::internal::log::Action_Append* append_;
  ::mesos::internal::log::Action_Truncate* truncate_;
  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Action* default_instance_;
};
// -------------------------------------------------------------------

class Record : public ::google::protobuf::Message {
 public:
  Record();
  virtual ~Record();
  
  Record(const Record& from);
  
  inline Record& operator=(const Record& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Record& default_instance();
  
  void Swap(Record* other);
  
  // implements Message ----------------------------------------------
  
  Record* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Record& from);
  void MergeFrom(const Record& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef Record_Type Type;
  static const Type PROMISE = Record_Type_PROMISE;
  static const Type ACTION = Record_Type_ACTION;
  static inline bool Type_IsValid(int value) {
    return Record_Type_IsValid(value);
  }
  static const Type Type_MIN =
    Record_Type_Type_MIN;
  static const Type Type_MAX =
    Record_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    Record_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return Record_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return Record_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return Record_Type_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .mesos.internal.log.Record.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::mesos::internal::log::Record_Type type() const;
  inline void set_type(::mesos::internal::log::Record_Type value);
  
  // optional .mesos.internal.log.Promise promise = 2;
  inline bool has_promise() const;
  inline void clear_promise();
  static const int kPromiseFieldNumber = 2;
  inline const ::mesos::internal::log::Promise& promise() const;
  inline ::mesos::internal::log::Promise* mutable_promise();
  
  // optional .mesos.internal.log.Action action = 3;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 3;
  inline const ::mesos::internal::log::Action& action() const;
  inline ::mesos::internal::log::Action* mutable_action();
  
  // @@protoc_insertion_point(class_scope:mesos.internal.log.Record)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int type_;
  ::mesos::internal::log::Promise* promise_;
  ::mesos::internal::log::Action* action_;
  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Record* default_instance_;
};
// -------------------------------------------------------------------

class PromiseRequest : public ::google::protobuf::Message {
 public:
  PromiseRequest();
  virtual ~PromiseRequest();
  
  PromiseRequest(const PromiseRequest& from);
  
  inline PromiseRequest& operator=(const PromiseRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PromiseRequest& default_instance();
  
  void Swap(PromiseRequest* other);
  
  // implements Message ----------------------------------------------
  
  PromiseRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PromiseRequest& from);
  void MergeFrom(const PromiseRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);
  
  // optional uint64 position = 2;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 2;
  inline ::google::protobuf::uint64 position() const;
  inline void set_position(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:mesos.internal.log.PromiseRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 position_;
  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PromiseRequest* default_instance_;
};
// -------------------------------------------------------------------

class PromiseResponse : public ::google::protobuf::Message {
 public:
  PromiseResponse();
  virtual ~PromiseResponse();
  
  PromiseResponse(const PromiseResponse& from);
  
  inline PromiseResponse& operator=(const PromiseResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PromiseResponse& default_instance();
  
  void Swap(PromiseResponse* other);
  
  // implements Message ----------------------------------------------
  
  PromiseResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PromiseResponse& from);
  void MergeFrom(const PromiseResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool okay = 1;
  inline bool has_okay() const;
  inline void clear_okay();
  static const int kOkayFieldNumber = 1;
  inline bool okay() const;
  inline void set_okay(bool value);
  
  // required uint64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);
  
  // optional uint64 position = 4;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 4;
  inline ::google::protobuf::uint64 position() const;
  inline void set_position(::google::protobuf::uint64 value);
  
  // optional .mesos.internal.log.Action action = 3;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 3;
  inline const ::mesos::internal::log::Action& action() const;
  inline ::mesos::internal::log::Action* mutable_action();
  
  // @@protoc_insertion_point(class_scope:mesos.internal.log.PromiseResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool okay_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 position_;
  ::mesos::internal::log::Action* action_;
  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PromiseResponse* default_instance_;
};
// -------------------------------------------------------------------

class WriteRequest : public ::google::protobuf::Message {
 public:
  WriteRequest();
  virtual ~WriteRequest();
  
  WriteRequest(const WriteRequest& from);
  
  inline WriteRequest& operator=(const WriteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteRequest& default_instance();
  
  void Swap(WriteRequest* other);
  
  // implements Message ----------------------------------------------
  
  WriteRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteRequest& from);
  void MergeFrom(const WriteRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);
  
  // required uint64 position = 2;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 2;
  inline ::google::protobuf::uint64 position() const;
  inline void set_position(::google::protobuf::uint64 value);
  
  // optional bool learned = 3;
  inline bool has_learned() const;
  inline void clear_learned();
  static const int kLearnedFieldNumber = 3;
  inline bool learned() const;
  inline void set_learned(bool value);
  
  // required .mesos.internal.log.Action.Type type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::mesos::internal::log::Action_Type type() const;
  inline void set_type(::mesos::internal::log::Action_Type value);
  
  // optional .mesos.internal.log.Action.Nop nop = 5;
  inline bool has_nop() const;
  inline void clear_nop();
  static const int kNopFieldNumber = 5;
  inline const ::mesos::internal::log::Action_Nop& nop() const;
  inline ::mesos::internal::log::Action_Nop* mutable_nop();
  
  // optional .mesos.internal.log.Action.Append append = 6;
  inline bool has_append() const;
  inline void clear_append();
  static const int kAppendFieldNumber = 6;
  inline const ::mesos::internal::log::Action_Append& append() const;
  inline ::mesos::internal::log::Action_Append* mutable_append();
  
  // optional .mesos.internal.log.Action.Truncate truncate = 7;
  inline bool has_truncate() const;
  inline void clear_truncate();
  static const int kTruncateFieldNumber = 7;
  inline const ::mesos::internal::log::Action_Truncate& truncate() const;
  inline ::mesos::internal::log::Action_Truncate* mutable_truncate();
  
  // @@protoc_insertion_point(class_scope:mesos.internal.log.WriteRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 position_;
  bool learned_;
  int type_;
  ::mesos::internal::log::Action_Nop* nop_;
  ::mesos::internal::log::Action_Append* append_;
  ::mesos::internal::log::Action_Truncate* truncate_;
  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static WriteRequest* default_instance_;
};
// -------------------------------------------------------------------

class WriteResponse : public ::google::protobuf::Message {
 public:
  WriteResponse();
  virtual ~WriteResponse();
  
  WriteResponse(const WriteResponse& from);
  
  inline WriteResponse& operator=(const WriteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteResponse& default_instance();
  
  void Swap(WriteResponse* other);
  
  // implements Message ----------------------------------------------
  
  WriteResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteResponse& from);
  void MergeFrom(const WriteResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool okay = 1;
  inline bool has_okay() const;
  inline void clear_okay();
  static const int kOkayFieldNumber = 1;
  inline bool okay() const;
  inline void set_okay(bool value);
  
  // required uint64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);
  
  // required uint64 position = 3;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 3;
  inline ::google::protobuf::uint64 position() const;
  inline void set_position(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:mesos.internal.log.WriteResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool okay_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 position_;
  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static WriteResponse* default_instance_;
};
// -------------------------------------------------------------------

class LearnRequest : public ::google::protobuf::Message {
 public:
  LearnRequest();
  virtual ~LearnRequest();
  
  LearnRequest(const LearnRequest& from);
  
  inline LearnRequest& operator=(const LearnRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LearnRequest& default_instance();
  
  void Swap(LearnRequest* other);
  
  // implements Message ----------------------------------------------
  
  LearnRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LearnRequest& from);
  void MergeFrom(const LearnRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 position = 1;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 1;
  inline ::google::protobuf::uint64 position() const;
  inline void set_position(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:mesos.internal.log.LearnRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 position_;
  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static LearnRequest* default_instance_;
};
// -------------------------------------------------------------------

class LearnResponse : public ::google::protobuf::Message {
 public:
  LearnResponse();
  virtual ~LearnResponse();
  
  LearnResponse(const LearnResponse& from);
  
  inline LearnResponse& operator=(const LearnResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LearnResponse& default_instance();
  
  void Swap(LearnResponse* other);
  
  // implements Message ----------------------------------------------
  
  LearnResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LearnResponse& from);
  void MergeFrom(const LearnResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool okay = 1;
  inline bool has_okay() const;
  inline void clear_okay();
  static const int kOkayFieldNumber = 1;
  inline bool okay() const;
  inline void set_okay(bool value);
  
  // optional .mesos.internal.log.Action action = 2;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 2;
  inline const ::mesos::internal::log::Action& action() const;
  inline ::mesos::internal::log::Action* mutable_action();
  
  // @@protoc_insertion_point(class_scope:mesos.internal.log.LearnResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool okay_;
  ::mesos::internal::log::Action* action_;
  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static LearnResponse* default_instance_;
};
// -------------------------------------------------------------------

class LearnedMessage : public ::google::protobuf::Message {
 public:
  LearnedMessage();
  virtual ~LearnedMessage();
  
  LearnedMessage(const LearnedMessage& from);
  
  inline LearnedMessage& operator=(const LearnedMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LearnedMessage& default_instance();
  
  void Swap(LearnedMessage* other);
  
  // implements Message ----------------------------------------------
  
  LearnedMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LearnedMessage& from);
  void MergeFrom(const LearnedMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .mesos.internal.log.Action action = 1;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 1;
  inline const ::mesos::internal::log::Action& action() const;
  inline ::mesos::internal::log::Action* mutable_action();
  
  // @@protoc_insertion_point(class_scope:mesos.internal.log.LearnedMessage)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::mesos::internal::log::Action* action_;
  friend void  protobuf_AddDesc_log_2eproto();
  friend void protobuf_AssignDesc_log_2eproto();
  friend void protobuf_ShutdownFile_log_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static LearnedMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// Promise

// required uint64 id = 1;
inline bool Promise::has_id() const {
  return _has_bit(0);
}
inline void Promise::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 Promise::id() const {
  return id_;
}
inline void Promise::set_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// Action_Nop

// -------------------------------------------------------------------

// Action_Append

// required bytes bytes = 1;
inline bool Action_Append::has_bytes() const {
  return _has_bit(0);
}
inline void Action_Append::clear_bytes() {
  if (bytes_ != &_default_bytes_) {
    bytes_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& Action_Append::bytes() const {
  return *bytes_;
}
inline void Action_Append::set_bytes(const ::std::string& value) {
  _set_bit(0);
  if (bytes_ == &_default_bytes_) {
    bytes_ = new ::std::string;
  }
  bytes_->assign(value);
}
inline void Action_Append::set_bytes(const char* value) {
  _set_bit(0);
  if (bytes_ == &_default_bytes_) {
    bytes_ = new ::std::string;
  }
  bytes_->assign(value);
}
inline void Action_Append::set_bytes(const void* value, size_t size) {
  _set_bit(0);
  if (bytes_ == &_default_bytes_) {
    bytes_ = new ::std::string;
  }
  bytes_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Action_Append::mutable_bytes() {
  _set_bit(0);
  if (bytes_ == &_default_bytes_) {
    bytes_ = new ::std::string;
  }
  return bytes_;
}

// optional bytes cksum = 2;
inline bool Action_Append::has_cksum() const {
  return _has_bit(1);
}
inline void Action_Append::clear_cksum() {
  if (cksum_ != &_default_cksum_) {
    cksum_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& Action_Append::cksum() const {
  return *cksum_;
}
inline void Action_Append::set_cksum(const ::std::string& value) {
  _set_bit(1);
  if (cksum_ == &_default_cksum_) {
    cksum_ = new ::std::string;
  }
  cksum_->assign(value);
}
inline void Action_Append::set_cksum(const char* value) {
  _set_bit(1);
  if (cksum_ == &_default_cksum_) {
    cksum_ = new ::std::string;
  }
  cksum_->assign(value);
}
inline void Action_Append::set_cksum(const void* value, size_t size) {
  _set_bit(1);
  if (cksum_ == &_default_cksum_) {
    cksum_ = new ::std::string;
  }
  cksum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Action_Append::mutable_cksum() {
  _set_bit(1);
  if (cksum_ == &_default_cksum_) {
    cksum_ = new ::std::string;
  }
  return cksum_;
}

// -------------------------------------------------------------------

// Action_Truncate

// required uint64 to = 1;
inline bool Action_Truncate::has_to() const {
  return _has_bit(0);
}
inline void Action_Truncate::clear_to() {
  to_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 Action_Truncate::to() const {
  return to_;
}
inline void Action_Truncate::set_to(::google::protobuf::uint64 value) {
  _set_bit(0);
  to_ = value;
}

// -------------------------------------------------------------------

// Action

// required uint64 position = 1;
inline bool Action::has_position() const {
  return _has_bit(0);
}
inline void Action::clear_position() {
  position_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 Action::position() const {
  return position_;
}
inline void Action::set_position(::google::protobuf::uint64 value) {
  _set_bit(0);
  position_ = value;
}

// required uint64 promised = 2;
inline bool Action::has_promised() const {
  return _has_bit(1);
}
inline void Action::clear_promised() {
  promised_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 Action::promised() const {
  return promised_;
}
inline void Action::set_promised(::google::protobuf::uint64 value) {
  _set_bit(1);
  promised_ = value;
}

// optional uint64 performed = 3;
inline bool Action::has_performed() const {
  return _has_bit(2);
}
inline void Action::clear_performed() {
  performed_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 Action::performed() const {
  return performed_;
}
inline void Action::set_performed(::google::protobuf::uint64 value) {
  _set_bit(2);
  performed_ = value;
}

// optional bool learned = 4;
inline bool Action::has_learned() const {
  return _has_bit(3);
}
inline void Action::clear_learned() {
  learned_ = false;
  _clear_bit(3);
}
inline bool Action::learned() const {
  return learned_;
}
inline void Action::set_learned(bool value) {
  _set_bit(3);
  learned_ = value;
}

// optional .mesos.internal.log.Action.Type type = 5;
inline bool Action::has_type() const {
  return _has_bit(4);
}
inline void Action::clear_type() {
  type_ = 1;
  _clear_bit(4);
}
inline ::mesos::internal::log::Action_Type Action::type() const {
  return static_cast< ::mesos::internal::log::Action_Type >(type_);
}
inline void Action::set_type(::mesos::internal::log::Action_Type value) {
  GOOGLE_DCHECK(::mesos::internal::log::Action_Type_IsValid(value));
  _set_bit(4);
  type_ = value;
}

// optional .mesos.internal.log.Action.Nop nop = 6;
inline bool Action::has_nop() const {
  return _has_bit(5);
}
inline void Action::clear_nop() {
  if (nop_ != NULL) nop_->::mesos::internal::log::Action_Nop::Clear();
  _clear_bit(5);
}
inline const ::mesos::internal::log::Action_Nop& Action::nop() const {
  return nop_ != NULL ? *nop_ : *default_instance_->nop_;
}
inline ::mesos::internal::log::Action_Nop* Action::mutable_nop() {
  _set_bit(5);
  if (nop_ == NULL) nop_ = new ::mesos::internal::log::Action_Nop;
  return nop_;
}

// optional .mesos.internal.log.Action.Append append = 7;
inline bool Action::has_append() const {
  return _has_bit(6);
}
inline void Action::clear_append() {
  if (append_ != NULL) append_->::mesos::internal::log::Action_Append::Clear();
  _clear_bit(6);
}
inline const ::mesos::internal::log::Action_Append& Action::append() const {
  return append_ != NULL ? *append_ : *default_instance_->append_;
}
inline ::mesos::internal::log::Action_Append* Action::mutable_append() {
  _set_bit(6);
  if (append_ == NULL) append_ = new ::mesos::internal::log::Action_Append;
  return append_;
}

// optional .mesos.internal.log.Action.Truncate truncate = 8;
inline bool Action::has_truncate() const {
  return _has_bit(7);
}
inline void Action::clear_truncate() {
  if (truncate_ != NULL) truncate_->::mesos::internal::log::Action_Truncate::Clear();
  _clear_bit(7);
}
inline const ::mesos::internal::log::Action_Truncate& Action::truncate() const {
  return truncate_ != NULL ? *truncate_ : *default_instance_->truncate_;
}
inline ::mesos::internal::log::Action_Truncate* Action::mutable_truncate() {
  _set_bit(7);
  if (truncate_ == NULL) truncate_ = new ::mesos::internal::log::Action_Truncate;
  return truncate_;
}

// -------------------------------------------------------------------

// Record

// required .mesos.internal.log.Record.Type type = 1;
inline bool Record::has_type() const {
  return _has_bit(0);
}
inline void Record::clear_type() {
  type_ = 1;
  _clear_bit(0);
}
inline ::mesos::internal::log::Record_Type Record::type() const {
  return static_cast< ::mesos::internal::log::Record_Type >(type_);
}
inline void Record::set_type(::mesos::internal::log::Record_Type value) {
  GOOGLE_DCHECK(::mesos::internal::log::Record_Type_IsValid(value));
  _set_bit(0);
  type_ = value;
}

// optional .mesos.internal.log.Promise promise = 2;
inline bool Record::has_promise() const {
  return _has_bit(1);
}
inline void Record::clear_promise() {
  if (promise_ != NULL) promise_->::mesos::internal::log::Promise::Clear();
  _clear_bit(1);
}
inline const ::mesos::internal::log::Promise& Record::promise() const {
  return promise_ != NULL ? *promise_ : *default_instance_->promise_;
}
inline ::mesos::internal::log::Promise* Record::mutable_promise() {
  _set_bit(1);
  if (promise_ == NULL) promise_ = new ::mesos::internal::log::Promise;
  return promise_;
}

// optional .mesos.internal.log.Action action = 3;
inline bool Record::has_action() const {
  return _has_bit(2);
}
inline void Record::clear_action() {
  if (action_ != NULL) action_->::mesos::internal::log::Action::Clear();
  _clear_bit(2);
}
inline const ::mesos::internal::log::Action& Record::action() const {
  return action_ != NULL ? *action_ : *default_instance_->action_;
}
inline ::mesos::internal::log::Action* Record::mutable_action() {
  _set_bit(2);
  if (action_ == NULL) action_ = new ::mesos::internal::log::Action;
  return action_;
}

// -------------------------------------------------------------------

// PromiseRequest

// required uint64 id = 1;
inline bool PromiseRequest::has_id() const {
  return _has_bit(0);
}
inline void PromiseRequest::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 PromiseRequest::id() const {
  return id_;
}
inline void PromiseRequest::set_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  id_ = value;
}

// optional uint64 position = 2;
inline bool PromiseRequest::has_position() const {
  return _has_bit(1);
}
inline void PromiseRequest::clear_position() {
  position_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 PromiseRequest::position() const {
  return position_;
}
inline void PromiseRequest::set_position(::google::protobuf::uint64 value) {
  _set_bit(1);
  position_ = value;
}

// -------------------------------------------------------------------

// PromiseResponse

// required bool okay = 1;
inline bool PromiseResponse::has_okay() const {
  return _has_bit(0);
}
inline void PromiseResponse::clear_okay() {
  okay_ = false;
  _clear_bit(0);
}
inline bool PromiseResponse::okay() const {
  return okay_;
}
inline void PromiseResponse::set_okay(bool value) {
  _set_bit(0);
  okay_ = value;
}

// required uint64 id = 2;
inline bool PromiseResponse::has_id() const {
  return _has_bit(1);
}
inline void PromiseResponse::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 PromiseResponse::id() const {
  return id_;
}
inline void PromiseResponse::set_id(::google::protobuf::uint64 value) {
  _set_bit(1);
  id_ = value;
}

// optional uint64 position = 4;
inline bool PromiseResponse::has_position() const {
  return _has_bit(2);
}
inline void PromiseResponse::clear_position() {
  position_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 PromiseResponse::position() const {
  return position_;
}
inline void PromiseResponse::set_position(::google::protobuf::uint64 value) {
  _set_bit(2);
  position_ = value;
}

// optional .mesos.internal.log.Action action = 3;
inline bool PromiseResponse::has_action() const {
  return _has_bit(3);
}
inline void PromiseResponse::clear_action() {
  if (action_ != NULL) action_->::mesos::internal::log::Action::Clear();
  _clear_bit(3);
}
inline const ::mesos::internal::log::Action& PromiseResponse::action() const {
  return action_ != NULL ? *action_ : *default_instance_->action_;
}
inline ::mesos::internal::log::Action* PromiseResponse::mutable_action() {
  _set_bit(3);
  if (action_ == NULL) action_ = new ::mesos::internal::log::Action;
  return action_;
}

// -------------------------------------------------------------------

// WriteRequest

// required uint64 id = 1;
inline bool WriteRequest::has_id() const {
  return _has_bit(0);
}
inline void WriteRequest::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 WriteRequest::id() const {
  return id_;
}
inline void WriteRequest::set_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  id_ = value;
}

// required uint64 position = 2;
inline bool WriteRequest::has_position() const {
  return _has_bit(1);
}
inline void WriteRequest::clear_position() {
  position_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 WriteRequest::position() const {
  return position_;
}
inline void WriteRequest::set_position(::google::protobuf::uint64 value) {
  _set_bit(1);
  position_ = value;
}

// optional bool learned = 3;
inline bool WriteRequest::has_learned() const {
  return _has_bit(2);
}
inline void WriteRequest::clear_learned() {
  learned_ = false;
  _clear_bit(2);
}
inline bool WriteRequest::learned() const {
  return learned_;
}
inline void WriteRequest::set_learned(bool value) {
  _set_bit(2);
  learned_ = value;
}

// required .mesos.internal.log.Action.Type type = 4;
inline bool WriteRequest::has_type() const {
  return _has_bit(3);
}
inline void WriteRequest::clear_type() {
  type_ = 1;
  _clear_bit(3);
}
inline ::mesos::internal::log::Action_Type WriteRequest::type() const {
  return static_cast< ::mesos::internal::log::Action_Type >(type_);
}
inline void WriteRequest::set_type(::mesos::internal::log::Action_Type value) {
  GOOGLE_DCHECK(::mesos::internal::log::Action_Type_IsValid(value));
  _set_bit(3);
  type_ = value;
}

// optional .mesos.internal.log.Action.Nop nop = 5;
inline bool WriteRequest::has_nop() const {
  return _has_bit(4);
}
inline void WriteRequest::clear_nop() {
  if (nop_ != NULL) nop_->::mesos::internal::log::Action_Nop::Clear();
  _clear_bit(4);
}
inline const ::mesos::internal::log::Action_Nop& WriteRequest::nop() const {
  return nop_ != NULL ? *nop_ : *default_instance_->nop_;
}
inline ::mesos::internal::log::Action_Nop* WriteRequest::mutable_nop() {
  _set_bit(4);
  if (nop_ == NULL) nop_ = new ::mesos::internal::log::Action_Nop;
  return nop_;
}

// optional .mesos.internal.log.Action.Append append = 6;
inline bool WriteRequest::has_append() const {
  return _has_bit(5);
}
inline void WriteRequest::clear_append() {
  if (append_ != NULL) append_->::mesos::internal::log::Action_Append::Clear();
  _clear_bit(5);
}
inline const ::mesos::internal::log::Action_Append& WriteRequest::append() const {
  return append_ != NULL ? *append_ : *default_instance_->append_;
}
inline ::mesos::internal::log::Action_Append* WriteRequest::mutable_append() {
  _set_bit(5);
  if (append_ == NULL) append_ = new ::mesos::internal::log::Action_Append;
  return append_;
}

// optional .mesos.internal.log.Action.Truncate truncate = 7;
inline bool WriteRequest::has_truncate() const {
  return _has_bit(6);
}
inline void WriteRequest::clear_truncate() {
  if (truncate_ != NULL) truncate_->::mesos::internal::log::Action_Truncate::Clear();
  _clear_bit(6);
}
inline const ::mesos::internal::log::Action_Truncate& WriteRequest::truncate() const {
  return truncate_ != NULL ? *truncate_ : *default_instance_->truncate_;
}
inline ::mesos::internal::log::Action_Truncate* WriteRequest::mutable_truncate() {
  _set_bit(6);
  if (truncate_ == NULL) truncate_ = new ::mesos::internal::log::Action_Truncate;
  return truncate_;
}

// -------------------------------------------------------------------

// WriteResponse

// required bool okay = 1;
inline bool WriteResponse::has_okay() const {
  return _has_bit(0);
}
inline void WriteResponse::clear_okay() {
  okay_ = false;
  _clear_bit(0);
}
inline bool WriteResponse::okay() const {
  return okay_;
}
inline void WriteResponse::set_okay(bool value) {
  _set_bit(0);
  okay_ = value;
}

// required uint64 id = 2;
inline bool WriteResponse::has_id() const {
  return _has_bit(1);
}
inline void WriteResponse::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 WriteResponse::id() const {
  return id_;
}
inline void WriteResponse::set_id(::google::protobuf::uint64 value) {
  _set_bit(1);
  id_ = value;
}

// required uint64 position = 3;
inline bool WriteResponse::has_position() const {
  return _has_bit(2);
}
inline void WriteResponse::clear_position() {
  position_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 WriteResponse::position() const {
  return position_;
}
inline void WriteResponse::set_position(::google::protobuf::uint64 value) {
  _set_bit(2);
  position_ = value;
}

// -------------------------------------------------------------------

// LearnRequest

// required uint64 position = 1;
inline bool LearnRequest::has_position() const {
  return _has_bit(0);
}
inline void LearnRequest::clear_position() {
  position_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 LearnRequest::position() const {
  return position_;
}
inline void LearnRequest::set_position(::google::protobuf::uint64 value) {
  _set_bit(0);
  position_ = value;
}

// -------------------------------------------------------------------

// LearnResponse

// required bool okay = 1;
inline bool LearnResponse::has_okay() const {
  return _has_bit(0);
}
inline void LearnResponse::clear_okay() {
  okay_ = false;
  _clear_bit(0);
}
inline bool LearnResponse::okay() const {
  return okay_;
}
inline void LearnResponse::set_okay(bool value) {
  _set_bit(0);
  okay_ = value;
}

// optional .mesos.internal.log.Action action = 2;
inline bool LearnResponse::has_action() const {
  return _has_bit(1);
}
inline void LearnResponse::clear_action() {
  if (action_ != NULL) action_->::mesos::internal::log::Action::Clear();
  _clear_bit(1);
}
inline const ::mesos::internal::log::Action& LearnResponse::action() const {
  return action_ != NULL ? *action_ : *default_instance_->action_;
}
inline ::mesos::internal::log::Action* LearnResponse::mutable_action() {
  _set_bit(1);
  if (action_ == NULL) action_ = new ::mesos::internal::log::Action;
  return action_;
}

// -------------------------------------------------------------------

// LearnedMessage

// required .mesos.internal.log.Action action = 1;
inline bool LearnedMessage::has_action() const {
  return _has_bit(0);
}
inline void LearnedMessage::clear_action() {
  if (action_ != NULL) action_->::mesos::internal::log::Action::Clear();
  _clear_bit(0);
}
inline const ::mesos::internal::log::Action& LearnedMessage::action() const {
  return action_ != NULL ? *action_ : *default_instance_->action_;
}
inline ::mesos::internal::log::Action* LearnedMessage::mutable_action() {
  _set_bit(0);
  if (action_ == NULL) action_ = new ::mesos::internal::log::Action;
  return action_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace log
}  // namespace internal
}  // namespace mesos

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mesos::internal::log::Action_Type>() {
  return ::mesos::internal::log::Action_Type_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mesos::internal::log::Record_Type>() {
  return ::mesos::internal::log::Record_Type_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_log_2eproto__INCLUDED
