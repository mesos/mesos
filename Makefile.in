# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Makefile.

SHELL = '/bin/sh'

BINDIR = @top_builddir@/bin
LIBDIR = @top_builddir@/lib
CONFDIR = @top_builddir@/conf
DEPLOYDIR = @top_builddir@/deploy

OS_NAME = @OS_NAME@

MESOS_HOME = @prefix@/mesos

WITH_INCLUDED_ZOOKEEPER = @WITH_INCLUDED_ZOOKEEPER@

LIBPROCESS = third_party/libprocess
PROTOBUF = third_party/protobuf-2.3.0
GLOG = third_party/glog-0.3.1
ZOOKEEPER = third_party/zookeeper-3.3.1/src/c


default: all

src: third_party
	$(MAKE) -C src

third_party:
	$(MAKE) -C $(LIBPROCESS)
	$(MAKE) -C $(PROTOBUF)
	$(MAKE) -C $(GLOG)
ifeq ($(WITH_INCLUDED_ZOOKEEPER),1)
	$(MAKE) -C $(ZOOKEEPER)
endif

# TODO(benh): Install generated C++ header files.
install:
	if test ! -d $(DESTDIR)$(MESOS_HOME)/bin; \
		then mkdir -p $(DESTDIR)$(MESOS_HOME)/bin; \
	fi
	if test ! -d $(DESTDIR)$(MESOS_HOME)/lib; \
		then mkdir -p $(DESTDIR)$(MESOS_HOME)/lib; \
	fi
	if test ! -d $(DESTDIR)$(MESOS_HOME)/lib/java; \
		then mkdir -p $(DESTDIR)$(MESOS_HOME)/lib/java; \
	fi
	if test ! -d $(DESTDIR)$(MESOS_HOME)/lib/python; \
		then mkdir -p $(DESTDIR)$(MESOS_HOME)/lib/python; \
	fi
	if test ! -d $(DESTDIR)$(MESOS_HOME)/conf; \
		then mkdir -p $(DESTDIR)$(MESOS_HOME)/conf; \
	fi
	if test ! -d $(DESTDIR)$(MESOS_HOME)/deploy; \
		then mkdir -p $(DESTDIR)$(MESOS_HOME)/deploy; \
	fi
	install -m 755 $(BINDIR)/mesos-master $(DESTDIR)$(MESOS_HOME)/bin
	install -m 755 $(BINDIR)/mesos-slave $(DESTDIR)$(MESOS_HOME)/bin
	install -m 755 $(BINDIR)/mesos-local $(DESTDIR)$(MESOS_HOME)/bin
	install -m 755 $(BINDIR)/mesos-launcher $(DESTDIR)$(MESOS_HOME)/bin
	install -m 755 $(BINDIR)/mesos-getconf $(DESTDIR)$(MESOS_HOME)/bin
	rsync -avz $(BINDIR)/webui $(DESTDIR)$(MESOS_HOME)/bin
	rsync -avz $(DEPLOYDIR) $(DESTDIR)$(MESOS_HOME)
	install -m 755 $(LIBDIR)/libmesos_exec.a $(DESTDIR)$(MESOS_HOME)/lib
	install -m 755 $(LIBDIR)/libmesos_sched.a $(DESTDIR)$(MESOS_HOME)/lib
ifeq ($(OS_NAME),darwin)
	install -m 755 $(LIBDIR)/libmesos.dylib $(DESTDIR)$(MESOS_HOME)/lib
	install -m 755 $(LIBDIR)/java/libmesos.dylib $(DESTDIR)$(MESOS_HOME)/lib/java
else
	install -m 755 $(LIBDIR)/libmesos.so $(DESTDIR)$(MESOS_HOME)/lib
	install -m 755 $(LIBDIR)/java/libmesos.so $(DESTDIR)$(MESOS_HOME)/lib/java
endif
	install -m 755 $(LIBDIR)/java/mesos.jar $(DESTDIR)$(MESOS_HOME)/lib/java
	install -m 755 $(LIBDIR)/python/_mesos.so $(DESTDIR)$(MESOS_HOME)/lib/python
	install -m 755 $(LIBDIR)/python/mesos.py $(DESTDIR)$(MESOS_HOME)/lib/python

uninstall:
	$(error unimplemented)

dist:
	$(error unimplemented)

distclean:
	$(MAKE) -C src clean # TODO(benh): Support an internal distclean.
	$(MAKE) -C $(LIBPROCESS) distclean
	$(MAKE) -C $(PROTOBUF) distclean
	$(MAKE) -C $(GLOG) distclean
ifeq ($(WITH_INCLUDED_ZOOKEEPER),1)
	$(MAKE) -C $(ZOOKEEPER) distclean
endif

doxygen:
	doxygen

etags:
	find src -name "*.cpp" -o -name "*.hpp" | grep -v "\~$$" | xargs etags -o src/TAGS

CTAGS = ctags
ctags:
	cd src; $(CTAGS) ../include/*.h ../include/*.hpp *.h *.c *.hpp *.cpp

#TODO(*): make the above use conditionals to handle old-school UNIX style ctags too.
#cd src; ctags --typedefs-and-c++ -I -members --declarations ../include/*.h ../include/*.c ../include/*.hpp ../include/*.cpp -o tags

# To use scope from the command line with file generated by csope below (cscope.out),
# run: cscope -R. In vim, you do :chdir MESOS_HOME, then :cscope add cscope.out, see
# also http://cscope.sourceforge.net/cscope_vim_tutorial.html
cscope:
	find * -name *.hpp -o -name *.cpp -o -name *.c -o -name *.h | cscope -b -i -

test: all
	$(MAKE) -C src test

all: src

clean:
	$(MAKE) -C src clean
	$(MAKE) -C $(LIBPROCESS) clean
	$(MAKE) -C $(PROTOBUF) clean
	$(MAKE) -C $(GLOG) clean
ifeq ($(WITH_INCLUDED_ZOOKEEPER),1)
	$(MAKE) -C $(ZOOKEEPER) clean
endif

.PHONY: default src third_party install uninstall dist test all clean
